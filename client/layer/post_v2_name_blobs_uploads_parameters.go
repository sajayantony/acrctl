// Code generated by go-swagger; DO NOT EDIT.

package layer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostV2NameBlobsUploadsParams creates a new PostV2NameBlobsUploadsParams object
// with the default values initialized.
func NewPostV2NameBlobsUploadsParams() *PostV2NameBlobsUploadsParams {
	var ()
	return &PostV2NameBlobsUploadsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostV2NameBlobsUploadsParamsWithTimeout creates a new PostV2NameBlobsUploadsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostV2NameBlobsUploadsParamsWithTimeout(timeout time.Duration) *PostV2NameBlobsUploadsParams {
	var ()
	return &PostV2NameBlobsUploadsParams{

		timeout: timeout,
	}
}

// NewPostV2NameBlobsUploadsParamsWithContext creates a new PostV2NameBlobsUploadsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostV2NameBlobsUploadsParamsWithContext(ctx context.Context) *PostV2NameBlobsUploadsParams {
	var ()
	return &PostV2NameBlobsUploadsParams{

		Context: ctx,
	}
}

// NewPostV2NameBlobsUploadsParamsWithHTTPClient creates a new PostV2NameBlobsUploadsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostV2NameBlobsUploadsParamsWithHTTPClient(client *http.Client) *PostV2NameBlobsUploadsParams {
	var ()
	return &PostV2NameBlobsUploadsParams{
		HTTPClient: client,
	}
}

/*PostV2NameBlobsUploadsParams contains all the parameters to send to the API endpoint
for the post v2 name blobs uploads operation typically these are written to a http.Request
*/
type PostV2NameBlobsUploadsParams struct {

	/*Digest
	  Digest of uploaded blob. If present, the upload will be completed, in a single request, with contents of the request body as the resulting blob.

	*/
	Digest *string
	/*Name
	  Name of the image (including the namespace)

	*/
	Name string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) WithTimeout(timeout time.Duration) *PostV2NameBlobsUploadsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) WithContext(ctx context.Context) *PostV2NameBlobsUploadsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) WithHTTPClient(client *http.Client) *PostV2NameBlobsUploadsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDigest adds the digest to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) WithDigest(digest *string) *PostV2NameBlobsUploadsParams {
	o.SetDigest(digest)
	return o
}

// SetDigest adds the digest to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) SetDigest(digest *string) {
	o.Digest = digest
}

// WithName adds the name to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) WithName(name string) *PostV2NameBlobsUploadsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post v2 name blobs uploads params
func (o *PostV2NameBlobsUploadsParams) SetName(name string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *PostV2NameBlobsUploadsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Digest != nil {

		// query param digest
		var qrDigest string
		if o.Digest != nil {
			qrDigest = *o.Digest
		}
		qDigest := qrDigest
		if qDigest != "" {
			if err := r.SetQueryParam("digest", qDigest); err != nil {
				return err
			}
		}

	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
