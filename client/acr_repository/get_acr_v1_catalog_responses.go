// Code generated by go-swagger; DO NOT EDIT.

package acr_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sajayantony/acrctl/models"
)

// GetAcrV1CatalogReader is a Reader for the GetAcrV1Catalog structure.
type GetAcrV1CatalogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAcrV1CatalogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAcrV1CatalogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAcrV1CatalogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetAcrV1CatalogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAcrV1CatalogOK creates a GetAcrV1CatalogOK with default headers values
func NewGetAcrV1CatalogOK() *GetAcrV1CatalogOK {
	return &GetAcrV1CatalogOK{}
}

/*GetAcrV1CatalogOK handles this case with default header values.

Returns a list of repositories
*/
type GetAcrV1CatalogOK struct {
	Payload *GetAcrV1CatalogOKBody
}

func (o *GetAcrV1CatalogOK) Error() string {
	return fmt.Sprintf("[GET /acr/v1/_catalog][%d] getAcrV1CatalogOK  %+v", 200, o.Payload)
}

func (o *GetAcrV1CatalogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAcrV1CatalogOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAcrV1CatalogBadRequest creates a GetAcrV1CatalogBadRequest with default headers values
func NewGetAcrV1CatalogBadRequest() *GetAcrV1CatalogBadRequest {
	return &GetAcrV1CatalogBadRequest{}
}

/*GetAcrV1CatalogBadRequest handles this case with default header values.

On failure
*/
type GetAcrV1CatalogBadRequest struct {
	Payload *GetAcrV1CatalogBadRequestBody
}

func (o *GetAcrV1CatalogBadRequest) Error() string {
	return fmt.Sprintf("[GET /acr/v1/_catalog][%d] getAcrV1CatalogBadRequest  %+v", 400, o.Payload)
}

func (o *GetAcrV1CatalogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAcrV1CatalogBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAcrV1CatalogUnauthorized creates a GetAcrV1CatalogUnauthorized with default headers values
func NewGetAcrV1CatalogUnauthorized() *GetAcrV1CatalogUnauthorized {
	return &GetAcrV1CatalogUnauthorized{}
}

/*GetAcrV1CatalogUnauthorized handles this case with default header values.

Unauthorized access
*/
type GetAcrV1CatalogUnauthorized struct {
	Payload *GetAcrV1CatalogUnauthorizedBody
}

func (o *GetAcrV1CatalogUnauthorized) Error() string {
	return fmt.Sprintf("[GET /acr/v1/_catalog][%d] getAcrV1CatalogUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAcrV1CatalogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAcrV1CatalogUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAcrV1CatalogBadRequestBody get acr v1 catalog bad request body
swagger:model GetAcrV1CatalogBadRequestBody
*/
type GetAcrV1CatalogBadRequestBody struct {

	// data
	Data *models.Error `json:"data,omitempty"`
}

// Validate validates this get acr v1 catalog bad request body
func (o *GetAcrV1CatalogBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAcrV1CatalogBadRequestBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAcrV1CatalogBadRequest" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAcrV1CatalogBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAcrV1CatalogBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetAcrV1CatalogBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAcrV1CatalogOKBody get acr v1 catalog o k body
swagger:model GetAcrV1CatalogOKBody
*/
type GetAcrV1CatalogOKBody struct {

	// data
	Data models.Repositories `json:"data"`
}

// Validate validates this get acr v1 catalog o k body
func (o *GetAcrV1CatalogOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAcrV1CatalogOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if err := o.Data.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("getAcrV1CatalogOK" + "." + "data")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAcrV1CatalogOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAcrV1CatalogOKBody) UnmarshalBinary(b []byte) error {
	var res GetAcrV1CatalogOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAcrV1CatalogUnauthorizedBody get acr v1 catalog unauthorized body
swagger:model GetAcrV1CatalogUnauthorizedBody
*/
type GetAcrV1CatalogUnauthorizedBody struct {

	// data
	Data *models.Error `json:"data,omitempty"`
}

// Validate validates this get acr v1 catalog unauthorized body
func (o *GetAcrV1CatalogUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAcrV1CatalogUnauthorizedBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAcrV1CatalogUnauthorized" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAcrV1CatalogUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAcrV1CatalogUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetAcrV1CatalogUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
