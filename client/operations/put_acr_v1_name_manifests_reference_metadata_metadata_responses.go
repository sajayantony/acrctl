// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sajayantony/acrctl/models"
)

// PutAcrV1NameManifestsReferenceMetadataMetadataReader is a Reader for the PutAcrV1NameManifestsReferenceMetadataMetadata structure.
type PutAcrV1NameManifestsReferenceMetadataMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPutAcrV1NameManifestsReferenceMetadataMetadataCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutAcrV1NameManifestsReferenceMetadataMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutAcrV1NameManifestsReferenceMetadataMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutAcrV1NameManifestsReferenceMetadataMetadataCreated creates a PutAcrV1NameManifestsReferenceMetadataMetadataCreated with default headers values
func NewPutAcrV1NameManifestsReferenceMetadataMetadataCreated() *PutAcrV1NameManifestsReferenceMetadataMetadataCreated {
	return &PutAcrV1NameManifestsReferenceMetadataMetadataCreated{}
}

/*PutAcrV1NameManifestsReferenceMetadataMetadataCreated handles this case with default header values.

The metadata is added/updated
*/
type PutAcrV1NameManifestsReferenceMetadataMetadataCreated struct {
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataCreated) Error() string {
	return fmt.Sprintf("[PUT /acr/v1/{name}/_manifests/{reference}/_metadata/{metadata}][%d] putAcrV1NameManifestsReferenceMetadataMetadataCreated ", 201)
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAcrV1NameManifestsReferenceMetadataMetadataBadRequest creates a PutAcrV1NameManifestsReferenceMetadataMetadataBadRequest with default headers values
func NewPutAcrV1NameManifestsReferenceMetadataMetadataBadRequest() *PutAcrV1NameManifestsReferenceMetadataMetadataBadRequest {
	return &PutAcrV1NameManifestsReferenceMetadataMetadataBadRequest{}
}

/*PutAcrV1NameManifestsReferenceMetadataMetadataBadRequest handles this case with default header values.

On failure
*/
type PutAcrV1NameManifestsReferenceMetadataMetadataBadRequest struct {
	Payload *PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataBadRequest) Error() string {
	return fmt.Sprintf("[PUT /acr/v1/{name}/_manifests/{reference}/_metadata/{metadata}][%d] putAcrV1NameManifestsReferenceMetadataMetadataBadRequest  %+v", 400, o.Payload)
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized creates a PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized with default headers values
func NewPutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized() *PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized {
	return &PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized{}
}

/*PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized handles this case with default header values.

Unauthorized access
*/
type PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized struct {
	Payload *PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /acr/v1/{name}/_manifests/{reference}/_metadata/{metadata}][%d] putAcrV1NameManifestsReferenceMetadataMetadataUnauthorized  %+v", 401, o.Payload)
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAcrV1NameManifestsReferenceMetadataMetadataNotFound creates a PutAcrV1NameManifestsReferenceMetadataMetadataNotFound with default headers values
func NewPutAcrV1NameManifestsReferenceMetadataMetadataNotFound() *PutAcrV1NameManifestsReferenceMetadataMetadataNotFound {
	return &PutAcrV1NameManifestsReferenceMetadataMetadataNotFound{}
}

/*PutAcrV1NameManifestsReferenceMetadataMetadataNotFound handles this case with default header values.

The repository, manifest or metadata is unknown
*/
type PutAcrV1NameManifestsReferenceMetadataMetadataNotFound struct {
	Payload *PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataNotFound) Error() string {
	return fmt.Sprintf("[PUT /acr/v1/{name}/_manifests/{reference}/_metadata/{metadata}][%d] putAcrV1NameManifestsReferenceMetadataMetadataNotFound  %+v", 404, o.Payload)
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody put acr v1 name manifests reference metadata metadata bad request body
swagger:model PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody
*/
type PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody struct {

	// data
	Data *models.Error `json:"data,omitempty"`
}

// Validate validates this put acr v1 name manifests reference metadata metadata bad request body
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("putAcrV1NameManifestsReferenceMetadataMetadataBadRequest" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PutAcrV1NameManifestsReferenceMetadataMetadataBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody put acr v1 name manifests reference metadata metadata not found body
swagger:model PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody
*/
type PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody struct {

	// data
	Data *models.Error `json:"data,omitempty"`
}

// Validate validates this put acr v1 name manifests reference metadata metadata not found body
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("putAcrV1NameManifestsReferenceMetadataMetadataNotFound" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PutAcrV1NameManifestsReferenceMetadataMetadataNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody put acr v1 name manifests reference metadata metadata unauthorized body
swagger:model PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody
*/
type PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody struct {

	// data
	Data *models.Error `json:"data,omitempty"`
}

// Validate validates this put acr v1 name manifests reference metadata metadata unauthorized body
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("putAcrV1NameManifestsReferenceMetadataMetadataUnauthorized" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PutAcrV1NameManifestsReferenceMetadataMetadataUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
