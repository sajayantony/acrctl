// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ManifestAttributeList manifest attribute list
// swagger:model ManifestAttributeList
type ManifestAttributeList struct {

	// imagename
	Imagename string `json:"imagename,omitempty"`

	// manifests
	Manifests []*ManifestAttributeListManifestsItems0 `json:"manifests"`

	// registry
	Registry string `json:"registry,omitempty"`
}

// Validate validates this manifest attribute list
func (m *ManifestAttributeList) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateManifests(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ManifestAttributeList) validateManifests(formats strfmt.Registry) error {

	if swag.IsZero(m.Manifests) { // not required
		return nil
	}

	for i := 0; i < len(m.Manifests); i++ {
		if swag.IsZero(m.Manifests[i]) { // not required
			continue
		}

		if m.Manifests[i] != nil {
			if err := m.Manifests[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("manifests" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ManifestAttributeList) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ManifestAttributeList) UnmarshalBinary(b []byte) error {
	var res ManifestAttributeList
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ManifestAttributeListManifestsItems0 manifest attribute list manifests items0
// swagger:model ManifestAttributeListManifestsItems0
type ManifestAttributeListManifestsItems0 struct {

	// architecture
	Architecture string `json:"architecture,omitempty"`

	// changeable attributes
	ChangeableAttributes *ManifestAttributeListManifestsItems0ChangeableAttributes `json:"changeableAttributes,omitempty"`

	// created time
	CreatedTime string `json:"createdTime,omitempty"`

	// digest
	Digest string `json:"digest,omitempty"`

	// last update time
	LastUpdateTime string `json:"lastUpdateTime,omitempty"`

	// media type
	MediaType string `json:"mediaType,omitempty"`

	// os
	Os string `json:"os,omitempty"`

	// quarantine tag
	QuarantineTag string `json:"quarantineTag,omitempty"`

	// references
	References []*ManifestAttributeListManifestsItems0ReferencesItems0 `json:"references"`

	// tags
	Tags []string `json:"tags"`
}

// Validate validates this manifest attribute list manifests items0
func (m *ManifestAttributeListManifestsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChangeableAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReferences(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ManifestAttributeListManifestsItems0) validateChangeableAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.ChangeableAttributes) { // not required
		return nil
	}

	if m.ChangeableAttributes != nil {
		if err := m.ChangeableAttributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("changeableAttributes")
			}
			return err
		}
	}

	return nil
}

func (m *ManifestAttributeListManifestsItems0) validateReferences(formats strfmt.Registry) error {

	if swag.IsZero(m.References) { // not required
		return nil
	}

	for i := 0; i < len(m.References); i++ {
		if swag.IsZero(m.References[i]) { // not required
			continue
		}

		if m.References[i] != nil {
			if err := m.References[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("references" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ManifestAttributeListManifestsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ManifestAttributeListManifestsItems0) UnmarshalBinary(b []byte) error {
	var res ManifestAttributeListManifestsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ManifestAttributeListManifestsItems0ChangeableAttributes manifest attribute list manifests items0 changeable attributes
// swagger:model ManifestAttributeListManifestsItems0ChangeableAttributes
type ManifestAttributeListManifestsItems0ChangeableAttributes struct {

	// delete enabled
	DeleteEnabled bool `json:"deleteEnabled,omitempty"`

	// list enabled
	ListEnabled bool `json:"listEnabled,omitempty"`

	// quarantine details
	QuarantineDetails string `json:"quarantineDetails,omitempty"`

	// quarantine state
	QuarantineState string `json:"quarantineState,omitempty"`

	// read enabled
	ReadEnabled bool `json:"readEnabled,omitempty"`

	// write enabled
	WriteEnabled bool `json:"writeEnabled,omitempty"`
}

// Validate validates this manifest attribute list manifests items0 changeable attributes
func (m *ManifestAttributeListManifestsItems0ChangeableAttributes) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ManifestAttributeListManifestsItems0ChangeableAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ManifestAttributeListManifestsItems0ChangeableAttributes) UnmarshalBinary(b []byte) error {
	var res ManifestAttributeListManifestsItems0ChangeableAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ManifestAttributeListManifestsItems0ReferencesItems0 manifest attribute list manifests items0 references items0
// swagger:model ManifestAttributeListManifestsItems0ReferencesItems0
type ManifestAttributeListManifestsItems0ReferencesItems0 struct {

	// architecture
	Architecture string `json:"architecture,omitempty"`

	// digest
	Digest string `json:"digest,omitempty"`

	// os
	Os string `json:"os,omitempty"`
}

// Validate validates this manifest attribute list manifests items0 references items0
func (m *ManifestAttributeListManifestsItems0ReferencesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ManifestAttributeListManifestsItems0ReferencesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ManifestAttributeListManifestsItems0ReferencesItems0) UnmarshalBinary(b []byte) error {
	var res ManifestAttributeListManifestsItems0ReferencesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
